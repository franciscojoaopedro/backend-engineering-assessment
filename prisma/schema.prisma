generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Company {
  id          String @id @default(uuid())
  name        String
  description String
  website     String
  location    String
  jobs        Job[]
}

enum JobType {
  internship
  volunteer
  full_time
  contract
  temporary
  part_time
}

enum WorkModeType {
  on_site
  hybrid
  remote
}

model Job {
  id           String        @id @default(uuid())
  title        String
  description  String        @db.Text
  location     String
  jobtype      JobType
  workmode     WorkModeType
  salary       Float?
  companyId    String
  jobFavorites JobFavorite[]
  company      Company       @relation(fields: [companyId], references: [id])
  applications Application[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model JobFavorite {
  id        String   @id @default(uuid())
  jobId     String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  job       Job      @relation(fields: [jobId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum StatuApplication {
  pending
  accpeted
  rejected
}

model Application {
  id        String           @id @default(uuid())
  userId    String
  jobId     String
  job       Job              @relation(fields: [jobId], references: [id])
  user      User             @relation(fields: [userId], references: [id])
  status    StatuApplication @default(pending)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

enum Gender {
  female
  male
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  age          Int
  country      String
  phone        String
  gender       Gender
  applications Application[]
  jobFavorites JobFavorite[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
